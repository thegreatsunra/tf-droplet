version: "3"

## this compose file is derived from:
## https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-with-docker-compose

services:

%{ for site_key, site_domain_name in sites_available ~}
  ${database_prefix}${site_key}:
    image: mariadb:10.9.3
    container_name: ${database_prefix}${site_key}
    restart: unless-stopped
    env_file: .env
    environment:
      - MYSQL_DATABASE=${wordpress_prefix}${database_prefix}${site_key}
      - MYSQL_PASSWORD=$MYSQL_PASSWORD_${site_key}
      - MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD_${site_key}
      - MYSQL_USER=$MYSQL_USER_${site_key}
    volumes:
      - ${database_prefix}${site_key}:/var/lib/mysql
    command: "--default-authentication-plugin=mysql_native_password"
    networks:
      - app-network

  ${wordpress_prefix}${site_key}:
    depends_on:
      - ${database_prefix}${site_key}
    image: wordpress:6.0.2-php8.1-fpm-alpine
    container_name: ${wordpress_prefix}${site_key}
    restart: unless-stopped
    env_file: .env
    environment:
      - WORDPRESS_DB_HOST=${database_prefix}${site_key}:3306
      - WORDPRESS_DB_NAME=${wordpress_prefix}${database_prefix}${site_key}
      - WORDPRESS_DB_PASSWORD=$MYSQL_PASSWORD_${site_key}
      - WORDPRESS_DB_USER=$MYSQL_USER_${site_key}
    volumes:
      - ${wordpress_prefix}${site_key}:/var/www/html
    networks:
      - app-network

%{ endfor ~}

  nginx:
    depends_on:
%{ for site_key, site_domain_name in sites_available ~}
      - ${wordpress_prefix}${site_key}
%{ endfor ~}
    build: ./nginx
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - certbot-etc:/etc/letsencrypt
%{ for site_key, site_domain_name in sites_available ~}
      - ${wordpress_prefix}${site_key}:/var/www/html/${site_domain_name}
%{ endfor ~}
    networks:
      - app-network

  certbot:
    depends_on:
      - nginx
    image: certbot/certbot:v1.31.0
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
%{ for site_key, site_domain_name in sites_available ~}
      - ${wordpress_prefix}${site_key}:/var/www/html/${site_domain_name}
%{ endfor ~}
    ## replace `--staging` with `--force-renewal` once you know it works
    command: |
%{ for site_key, site_domain_name in sites_available ~}
      certonly
      --webroot
      --webroot-path=/var/www/html/${site_domain_name}
      --email ${email_address}
      --agree-tos
      --no-eff-email
      --staging
      -d ${site_domain_name}
%{ endfor ~}

volumes:
  certbot-etc:
%{ for site_key, site_domain_name in sites_available ~}
  ${database_prefix}${site_key}:
  ${wordpress_prefix}${site_key}:
%{ endfor ~}

networks:
  app-network:
    driver: bridge
